class Solution {
    char[] map = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};

    public String toHex(int num) {
          
        if(num == 0) return "0";
        String result = "";
        while(num != 0){
            result = map[(num & 15)] + result; 
            //Logical shift right is represented by >>> while arithmetic shift right is represented by >>
            //https://codeburst.io/your-guide-to-bit-manipulation-48e7692f314a
            // negative, arithmetic will always have 1 in the most significant bit so we need to use logical shift
            num = (num >>> 4);
        }
        return result;
    }
    
}
