class Solution {
    public int maxSubArrayLen(int[] nums, int k) {
    int sum = 0, max = 0;
    HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    for (int i = 0; i < nums.length; i++) {
        sum = sum + nums[i]; // keep acc
        
        /// if start from 0. else start from non zero, exclude map.get(sum - k)
        if (sum == k) max = i + 1;
        else if (map.containsKey(sum - k)) max = Math.max(max, i - map.get(sum - k));
        // no need to record longer combination, this is usded for none zero situation.
        if (!map.containsKey(sum)) map.put(sum, i);
    }
    return max;
}

}
