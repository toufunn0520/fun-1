/*
// Definition for Employee.
class Employee {
    public int id;
    public int importance;
    public List<Integer> subordinates;
};
*/

class Solution {
    public int getImportance(List<Employee> employees, int id) {
        Map<Integer, Employee> map = new HashMap<>();
        for (int i  = 0; i < employees.size(); i++) {
            map.put(employees.get(i).id, employees.get(i));
        }
        
        Queue<Employee> queue = new LinkedList<>();
        queue.offer(map.get(id));
        int result = 0;
        while (!queue.isEmpty()) {
            Employee e = queue.poll();
            result += e.importance;
            for (int j = 0; j < e.subordinates.size(); j++) {
                queue.offer(map.get(e.subordinates.get(j)));
            }
        }
        return result;
    }
}
