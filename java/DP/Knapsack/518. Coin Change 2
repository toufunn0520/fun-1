//Time complexity: O(Namount) N is the length of coins array
// Space complexity: O(amount) to keep dp array.

class Solution {
    public int change(int amount, int[] coins) {
        // kp 
        int [] dp = new int[amount + 1];
        dp[0] = 1;
        for (int i = 0; i < coins.length; i ++) {
            for (int j = coins[i]; j < amount + 1; j ++) {
                dp[j] += dp[j - coins[i]];
            }
        }
        return dp[amount];
    }
}
