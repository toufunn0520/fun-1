// Space O(n)
// Time O(n)
// find the starting postion, use % to avoid overflow, create a tmp array for result, and copy it back to original array 
class Solution {
    public void rotate(int[] nums, int k) {
        if (nums == null || nums.length == 0) return;
        int len = nums.length;
        int pos = k % len;
        int[] tmp = new int[len];
        int j = 0;
        for (int i = len - pos; j < len; j++, i++) {
            tmp[j] = nums[i%len];
        }
        for (int i = 0; i < len ; i++) {
            nums[i] = tmp[i];
        }
        return;
    }
}
