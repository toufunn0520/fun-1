// Time O(n)
// Space O(1)

class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length, i = 0, j = n - 1;
        while (i + 1 < n && arr[i] < arr[i + 1]) i++;
        while (j > 0 && arr[j - 1] > arr[j]) j--;
        return i > 0 && i == j && j < n - 1;
    }
}


or

class Solution {
    public boolean validMountainArray(int[] arr) {
     if (arr.length < 3) return false;
      int start = 0;
      int end = arr.length-1;
      while (start < end) {
        if (arr[start+1] > arr[start]) {
          start++;
        } else if (arr[end-1] > arr[end]) { 
          end--;
        } else {
          break;
        }
      }
      return start != 0 && end != arr.length-1 && start == end;
    }
}
