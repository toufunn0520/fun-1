/*
162. Find Peak Element
Time complexity : O\big(log_2(n)\big)O(log 
2
â€‹	
 (n)). We reduce the search space in half at every step. Thus, the total search space will be consumed in log_2(n)log 
2
â€‹	
 (n) steps. Here, nn refers to the size of numsnums array.

Space complexity : O(1)O(1). Constant extra space is used.

*/

class Solution {
    public int findPeakElement(int[] nums) {
        return search(nums, 0, nums.length - 1);
    }
    public int search(int[] nums, int l, int r) {
        if (l == r)
            return l;
        int mid = (l + r) / 2;
        if (nums[mid] > nums[mid + 1])
            return search(nums, l, mid);
        return search(nums, mid + 1, r);
    }
    
}
