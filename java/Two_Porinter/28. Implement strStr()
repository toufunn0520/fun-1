// two pointer
class Solution {
    public int strStr(String haystack, String needle) {
        int L = needle.length(), n = haystack.length();
        if (L == 0) return 0;
        
        int pn = 0;
        // all posible start point
        while(pn < n - L +1) {
            // find the 1st matching index
            while(pn < n - L + 1 && haystack.charAt(pn) != needle.charAt(0)) {
                pn ++;
            }
            // check the matching length
            int currLen = 0, pL = 0;
            while(pL < L && pn < n && haystack.charAt(pn) == needle.charAt(pL)) {
                pn ++;
                pL ++;
                currLen ++;
            }
            
            // check if all match
            if (currLen == L) return pn - L;
            
            pn = pn - currLen + 1;
        }
        
        return -1;
    }
}
