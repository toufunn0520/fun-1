// two pointer 
// slow pointer j 
// fast pointer i
class Solution {
    public String removeDuplicates(String s, int k) {
        Stack<Integer> counts = new Stack<>();
        char[] sa = s.toCharArray();
        int j = 0;
        for (int i = 0 ; i < s.length(); i++, j++) {
            sa[j] = sa[i];
            if (j == 0 || sa[j] != sa[j -1]) {
                counts.push(1);
            } else {
                int current = counts.pop() + 1;
                if (current == k) {
                    j = j - k;       
                } else {
                    counts.push(current);
                }
            }
        }
        return new String(sa, 0, j);
    }
    
}
